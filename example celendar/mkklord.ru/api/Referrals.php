<?php
/**
 * Extension for Simpla
 * File is autogenerated 31.07.2020 12:03:46 by CRUD 
 * @author Ruslan Kopyl
 */
require_once 'Simpla.php';

class Referrals extends Simpla
{
	public function get_referral($id)
	{
		$query = $this->db->placehold("
            SELECT * 
            FROM __referrals
            WHERE id = ?
        ", (int)$id);
        $this->db->query($query);
        $result = $this->db->result();
	
        return $result;
    }
    
	public function get_referrals($filter = array())
	{
		$id_filter = '';
        $keyword_filter = '';
        $limit = 1000;
		$page = 1;
        
        if (!empty($filter['id']))
            $id_filter = $this->db->placehold("AND id IN (?@)", array_map('intval', (array)$filter['id']));
        
		if(isset($filter['keyword']))
		{
			$keywords = explode(' ', $filter['keyword']);
			foreach($keywords as $keyword)
				$keyword_filter .= $this->db->placehold('AND (name LIKE "%'.$this->db->escape(trim($keyword)).'%" )');
		}
        
		if(isset($filter['limit']))
			$limit = max(1, intval($filter['limit']));

		if(isset($filter['page']))
			$page = max(1, intval($filter['page']));
            
        $sql_limit = $this->db->placehold(' LIMIT ?, ? ', ($page-1)*$limit, $limit);

        $query = $this->db->placehold("
            SELECT * 
            FROM __referrals
            WHERE 1
                $id_filter
 	           $keyword_filter
            ORDER BY id DESC 
            $sql_limit
        ");
        $this->db->query($query);
        $results = $this->db->results();
        
        return $results;
	}
    
	public function count_referrals($filter = array())
	{
        $id_filter = '';
        $keyword_filter = '';
        
        if (!empty($filter['id']))
            $id_filter = $this->db->placehold("AND id IN (?@)", array_map('intval', (array)$filter['id']));
		
        if(isset($filter['keyword']))
		{
			$keywords = explode(' ', $filter['keyword']);
			foreach($keywords as $keyword)
				$keyword_filter .= $this->db->placehold('AND (name LIKE "%'.$this->db->escape(trim($keyword)).'%" )');
		}
                
		$query = $this->db->placehold("
            SELECT COUNT(id) AS count
            FROM __referrals
            WHERE 1
                $id_filter
                $keyword_filter
        ");
        $this->db->query($query);
        $count = $this->db->result('count');
	
        return $count;
    }
    
    public function add_referral($referral)
    {
		$query = $this->db->placehold("
            INSERT INTO __referrals SET ?%
        ", (array)$referral);
        $this->db->query($query);
        $id = $this->db->insert_id();
        
        return $id;
    }
    
    public function update_referral($id, $referral)
    {
		$query = $this->db->placehold("
            UPDATE __referrals SET ?% WHERE id = ?
        ", (array)$referral, (int)$id);
        $this->db->query($query);
        
        return $id;
    }
    
    public function delete_referral($id)
    {
		$query = $this->db->placehold("
            DELETE FROM __referrals WHERE id = ?
        ", (int)$id);
        $this->db->query($query);
    }
    
    public function get_stats($filter = array())
    {
        $stats = array();
        
        $date_from_filter = '';
        $date_to_filter = '';
        
        if (!empty($filter['date_from']))
            $date_from_filter = $this->db->placehold("AND DATE(r.created) >= ?", $filter['date_from']);

        if (!empty($filter['date_to']))
            $date_to_filter = $this->db->placehold("AND DATE(r.created) <= ?", $filter['date_to']);

        $query = $this->db->placehold("
            SELECT 
                r.utm_source,
                r.webmaster_id,
                COUNT(r.id) AS count
            FROM __referrals AS r
            WHERE 1
            $date_from_filter
            $date_to_filter
            GROUP BY r.utm_source, r.webmaster_id
        ");
        $this->db->query($query);
        
        foreach ($this->db->results() as $r)
        {
            $cell_name = $r->utm_source.$r->webmaster_id;
            $r->count_orders = 0;
            $r->amount = 0;
            $r->conversion = 0;
            $stats[$cell_name] = $r;
        }
        
        if (!empty($filter['date_from']))
            $date_from_filter = $this->db->placehold("AND DATE(o.date) >= ?", $filter['date_from']);

        if (!empty($filter['date_to']))
            $date_to_filter = $this->db->placehold("AND DATE(o.date) <= ?", $filter['date_to']);
        
        $query = $this->db->placehold("
            SELECT 
                o.utm_source,
                o.webmaster_id,
                SUM(o.amount) AS amount,
                COUNT(o.id) AS count_orders,
                SUM(o.first_loan) AS count_first
            FROM __orders AS o
            WHERE 1
            $date_from_filter
            $date_to_filter
            GROUP BY o.utm_source, o.webmaster_id
        ");
        $this->db->query($query);
//echo __FILE__.' '.__LINE__.'<br /><pre>';var_dump($query);echo '</pre><hr />';
        foreach ($this->db->results() as $r)
        {
            $cell_name = $r->utm_source.$r->webmaster_id;
            if (isset($stats[$cell_name]))
            {
                $stats[$cell_name]->amount = $r->amount;
                $stats[$cell_name]->count_orders = $r->count_orders;
                $stats[$cell_name]->count_first = $r->count_first;
                $stats[$cell_name]->conversion = round($r->count_orders / $stats[$cell_name]->count, 2) * 100;
            }
            else
            {
                $r->conversion = 0;
                $r->count = 0;
                $stats[$cell_name] = $r;
            }
        }
//echo __FILE__.' '.__LINE__.'<br /><pre>';var_dump($stats);echo '</pre><hr />';        
        return $stats;
    }
}